{"version":3,"sources":["components/TodoItem.jsx","components/Todos.jsx","components/layout/Header.jsx","components/AddTodo.jsx","components/pages/About.jsx","components/pages/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","backgroundColor","textDecoration","props","todo","status","padding","borderBottom","this","id","tittle","style","type","onChange","markComplete","bind","btnStyle","onClick","markDelete","Component","background","color","border","borderRadius","cursor","float","Todos","todos","map","key","Header","headerStyle","linkStyle","to","textAlign","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","Fragment","Contact","App","filter","newTodo","uuid","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b59bf70e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            backgroundColor: '#f4f4f4',\r\n            textDecoration: this.props.todo.status ? 'line-through' : 'none',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, tittle } = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()} >\r\n                <p>\r\n                    <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} /> {' '}\r\n                    {tittle}\r\n                    <button style={btnStyle} onClick={this.props.markDelete.bind(this, id)} >x</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//PropTypes\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '50%',\r\n    padding: '5px 10px',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n};\r\n\r\nexport default TodoItem\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Todos extends Component {\r\n    render() {\r\n        return this.props.todos.map((todo) => (\r\n            <TodoItem  key={todo.id} todo={todo} markComplete={this.props.markComplete} markDelete={this.props.markDelete} />\r\n        ));\r\n    }\r\n}\r\n\r\n//PropTypes\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Todos\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header style={headerStyle} >\r\n                <h1>TodoList</h1>\r\n                <Link style={linkStyle} to=\"/\" >Home</Link> | <Link style={linkStyle} to=\"/about\" >About</Link> | <Link style={linkStyle} to=\"/contact\">Contact</Link>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n    state= {\r\n        tittle: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value  });\r\n\r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.tittle);\r\n        this.setState({ tittle: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form  onSubmit={this.onSubmit} style={{ display: 'flex' }} >\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"tittle\"\r\n                    placeholder=\"Add Todo ...\" \r\n                    style={{ flex: '10', padding: '5px' }}\r\n                    value={this.state.tittle}\r\n                    onChange={this.onChange}\r\n                />\r\n                <input \r\n                    type=\"submit\"\r\n                    value= \"Submit\"\r\n                    className= \"btn\"\r\n                    style={{ flex: '1' }}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>About the app</h1>\r\n                <p>This is the 1.0.2 version of Todo App</p>\r\n                <p>All right reserved</p>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\n\r\nexport class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <p>For more information please contact me via E-mail: toix82k@gmail.com</p>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact\r\n","\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route  } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport Contact from './components/pages/Contact';\nimport * as uuid from 'uuid';\nimport './App.css';\n\nexport class App extends Component {\n  state = {\n    todos: []\n  }\n\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map((todo) =>{\n      if(todo.id === id) {\n        todo.status = !todo.status\n      }\n      return todo;\n    }) });\n  }\n\n  markDelete = (id) => {\n    this.setState({ todos:[...this.state.todos.filter((todo) => todo.id !== id)] });\n  }\n\n  addTodo = (tittle) => {\n    const newTodo = {\n      id: uuid.v4(),\n      tittle,\n      status: false\n    };\n    this.setState({ todos: [...this.state.todos, newTodo] });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos = {this.state.todos} markComplete = {this.markComplete} markDelete={this.markDelete}  />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/contact\" component={Contact} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}